name: Docker Build and Deploy

on:
  push:
    branches:
      - main  # Trigger action on push to main branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout repository  
      uses: actions/checkout@v2

    # Step 2: List repository files for debugging (helpful to confirm directory structure)
    - name: List repository files
      run: |
        echo "Current directory: $(pwd)"
        ls -R  # Recursively list files to confirm the structure

    # Step 3: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 4: Login to Docker Hub using GitHub secrets
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # GitHub secret for Docker Hub username
        password: ${{ secrets.DOCKER_PASSWORD }}  # GitHub secret for Docker Hub password

    # Step 5: Build Docker image using the correct path
    - name: Build Docker image
      run: |
        echo "Building Docker image from ./webprojects/HTMLPaint/Dockerfile"
        docker buildx build -f ./webprojects/HTMLPaint/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/web:latest ./webprojects/HTMLPaint --push

    # Step 6: Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        echo "Image pushed successfully!"

    # Step 7: SSH to EC2 and deploy Docker container
    - name: Set up SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}  # GitHub secret for EC2 SSH key

    # Step 8: Run Docker container on EC2 instance
    - name: SSH to EC2 and Deploy Docker container
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@15.206.89.21 "docker pull ${{ secrets.DOCKER_USERNAME }}/web:latest && docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/web:latest"
